@page "/event/{eventGuid}"
@using System.Web;
@using System.Globalization
@using MeetWave.Helper
@{
    var rsvpClasses = new Dictionary<string, List<string>>
    {
        {"NA", new() { "btn-primary", "btn-outline-primary" } },
        {"Going", new() { "btn-success", "btn-outline-success" } },
        {"Interested", new() { "btn-secondary", "btn-outline-secondary" }}
    };
    
    var ti = new CultureInfo("en-US", false).TextInfo;
}

@if(calendarEvent != null)
{
    <RadzenTabs>
        <Tabs>
            <RadzenTabsItem Text="Event">
                @{
                    var startTime = calendarEvent.StartDate;
                    var rsvpStatus = UserRsvp?.State;
                    var rsvpDeleted = UserRsvp == null || UserRsvp.DeletedTS != null;
                    <HeadContent>
                        <meta property="og:title" content="Fetwave Event - @calendarEvent.Title" />
                        <meta property="og:description" content="@($"Happening on {startTime?.DayOfWeek} {startTime:MM/dd/yyyy} at {startTime:hh:mm tt}")" />
                    </HeadContent>

                    <h1>@calendarEvent.Title</h1>
                    <br />
                    <div class="card">
                        <div class="card-header">
                            <div class="form-inline">
                                <button type="button" @onclick=@(async () => await UpdateRsvp(null, UserRsvp, calendarEvent.Id)) class="btn @(rsvpDeleted ? rsvpClasses["NA"][0] : rsvpClasses["NA"][1])">N/A</button>
                                <button type="button" @onclick=@(async () => await UpdateRsvp(RsvpStateEnum.Going, UserRsvp, calendarEvent.Id)) class="btn @(!rsvpDeleted && (rsvpStatus?.Name?.Equals(Helper.RsvpStateEnum.Going.ToString(), StringComparison.OrdinalIgnoreCase) ?? false) ? rsvpClasses["Going"][0] : rsvpClasses["Going"][1])">Going</button>
                                <button type="button" @onclick=@(async () => await UpdateRsvp(RsvpStateEnum.Interested, UserRsvp, calendarEvent.Id)) class="btn @(!rsvpDeleted && (rsvpStatus?.Name?.Equals(Helper.RsvpStateEnum.Interested.ToString(), StringComparison.OrdinalIgnoreCase) ?? false) ? rsvpClasses["Interested"][0] : rsvpClasses["Interested"][1])">Interested</button>
                                @if (calendarEvent.CreatedUserId!.Equals(UserId.ToString(), StringComparison.OrdinalIgnoreCase))
                                {
                                    <button @onclick="GotoEditEvent">Edit</button>
                                }
                            </div>
                        </div>
                        <div class="card-body">
                            <h3 class="card-title"><a href="@($"/event/{calendarEvent.UniqueId}")">@calendarEvent.Title</a></h3>
                            <div class="share">
                                <button type="button" class="btn btn-info" onclick=@($"copyToClipboard(event, 'https://www.fetwave.com/event/{calendarEvent.UniqueId}')")>Copy Link</button>
                            </div>
                            <div class="eventDetails">
                                <h5><i class="bi bi-clock"></i>@($"Happening on {startTime?.DayOfWeek} {startTime:MM/dd/yyyy} at {startTime:hh:mm tt}")</h5>
                                @if (!string.IsNullOrEmpty(calendarEvent.Address))
                                {
                                    <h5><a href="https://www.google.com/maps/search/?api=1&query=@HttpUtility.UrlEncode(calendarEvent.Address)"><i class="bi bi-map"></i>@calendarEvent.Address</a></h5>
                                }
                                <p>@ti.ToTitleCase(calendarEvent.Region?.Name), @calendarEvent.Region?.StateCode</p>
                                @if (calendarEvent.Categories?.Any() ?? false)
                                {
                                    <p>Category: @(string.Join(", ", calendarEvent.Categories?.Select(d => d.Name) ?? []))</p>
                                }
                                @if (calendarEvent.DressCodes?.Any() ?? false)
                                {
                                    <p>Dress Code: @(string.Join(", ", calendarEvent.DressCodes?.Select(d => d.Name) ?? []))</p>
                                }
                            </div>
                            <p class="card-text">@calendarEvent.Description</p>
                            <p>Going: @((MarkupString)(GoingHTML ?? ""))</p>
                            <p>Interested: @((MarkupString)(InterestedHTML ?? ""))</p>
                        </div>
                    </div>
                }
            </RadzenTabsItem>
            <RadzenTabsItem Text="Event Fees">
                @if (Organizer)
                {
                    <p>Add Event Fees</p>
                }
                <p>Pay Event Fees</p>
            </RadzenTabsItem>
        </Tabs>
    </RadzenTabs>
    
}
