@page "/messages"
@using MeetWave.Helper
@using Radzen.Blazor.Rendering
@using System.Web

<h3>Messages</h3>
@{
    var messages = UserMessages?.ToList();
}
@foreach(var i in Enumerable.Range(0, (messages ?? []).Count()))
{
    var message = messages[i];
    if (message?.Thread != null && (message.Lines?.Any() ?? false))
    {
        <RadzenCard class="rz-my-12 rz-mx-auto" Style="max-width: 1000px">
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-4">
                <RadzenImage Path="ImagePath" Style="width: 100px; height: 100px; border-radius: 50%;" />
                <RadzenStack Gap="0">
                    @if (IsThreadNew.TryGetValue(message!.Thread!.Id, out var isNew) ? isNew : false)
                    {
                        <RadzenBadge Variant="Variant.Outlined" Text="New" class="rz-ms-2" />
                    }
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Sender</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@message.Thread.CreatedUser.UserName</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Subject</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@(message.Thread.Subject ?? "Direct Message")</b></RadzenText>
                </RadzenStack>
            </RadzenStack>
            <RadzenCard class="rz-background-color-primary-light rz-shadow-0 rz-border-radius-0 rz-p-8" style="margin: 1rem calc(-1 * var(--rz-card-padding));">
                <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-light"><strong>Recent Messages</strong></RadzenText>
                <RadzenRow RowGap="0">
                    <RadzenColumn SizeSM="12">
                        @foreach (var line in message.Lines?.Take(3) ?? [])
                        {
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">@line!.Author.UserName</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@HttpUtility.HtmlDecode(line!.LineText)?.StripHtml().Substring(0, Math.Min(line.LineText.Length, 100))@((line.LineText?.Length ?? 0) > 100 ? "..." : string.Empty)</b></RadzenText>
                        }
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
            <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.End" Gap="0">
                <RadzenButton Variant="Variant.Text" Click=@(async () => await MarkAsRead(message.Thread.Id)) class="rz-text-secondary-color" Text="Mark as Read" />
                <RadzenButton @ref=buttons[i] Text="Open" Click="@(async (args) => { ActiveThreadId = message.Thread.Id; await MarkAsRead(message.Thread.Id); await popup.ToggleAsync(buttons[i].Element); })" />
                
            </RadzenStack>
        </RadzenCard>
        
    }
}
<Popup @ref=popup Lazy=true Open="@(() => OnMessageOpen())" class="message-popup"
       Style="
                display: none;
                position: absolute;
                height: 300px;
                width: 600px;
                padding: 5px;
                border: var(--rz-panel-border);
                background-color: var(--rz-panel-background-color)">
    <RadzenTextBox id="search" Placeholder="New Message" Style="width:100%;" @oninput=@(args => newMessage = $"{args.Value}") Value="@newMessage" />
    <RadzenButton Text="Send" Click="@(args => SendMessage())" />
    <RadzenDataList @ref=dataList AllowVirtualization=true Data=@lines Style="height:100%;overflow:auto;">
        <Template Context="line">
            <RadzenCard Style="width:100%">
                <RadzenRow>
                    <RadzenColumn Size="4" class="@(line.Author.Id == UserId.ToString() ? "rz-text-align-left" : "rz-text-align-right")">
                        <b>@(line.Author.UserName)</b>
                    </RadzenColumn>
                    <RadzenColumn Size="12" class="@(line.Author.Id == UserId.ToString() ? "rz-text-align-left" : "rz-text-align-right")">
                        @HttpUtility.HtmlDecode(line.LineText?.StripHtml())
                    </RadzenColumn>
                </RadzenRow>
            </RadzenCard>
        </Template>
    </RadzenDataList>
</Popup>